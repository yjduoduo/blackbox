<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\out\Cortex-M3 Execute for lpc1700.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\out\Cortex-M3 Execute for lpc1700.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 894]: Last Updated: Tue Apr 22 15:27:23 2014
<BR><P>
<H3>Maximum Stack Usage =         92 bytes + Unknown(Functions without stacksize, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
usbDevException &rArr; __usbDevEpIntHandler &rArr; __usbDevEp0RxDone &rArr; usbDevReadEndpoint &rArr; __usbDevSelectEndpoint
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[13]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[12]">__main</a> from __main.o(!!!main) referenced from vector_table.o(.constdata)
 <LI><a href="#[9]">__usbDevClearFeature</a> from usbdevprotocol.o(.text) referenced from usbdevprotocol.o(.data)
 <LI><a href="#[e]">__usbDevGetConfiguration</a> from usbdevprotocol.o(.text) referenced from usbdevprotocol.o(.data)
 <LI><a href="#[d]">__usbDevGetDescriptor</a> from usbdevprotocol.o(.text) referenced from usbdevprotocol.o(.data)
 <LI><a href="#[10]">__usbDevGetInterface</a> from usbdevprotocol.o(.text) referenced from usbdevprotocol.o(.data)
 <LI><a href="#[8]">__usbDevGetStatus</a> from usbdevprotocol.o(.text) referenced from usbdevprotocol.o(.data)
 <LI><a href="#[a]">__usbDevReserved</a> from usbdevprotocol.o(.text) referenced 7 times from usbdevprotocol.o(.data)
 <LI><a href="#[c]">__usbDevSetAddress</a> from usbdevprotocol.o(.text) referenced from usbdevprotocol.o(.data)
 <LI><a href="#[f]">__usbDevSetConfiguration</a> from usbdevprotocol.o(.text) referenced from usbdevprotocol.o(.data)
 <LI><a href="#[b]">__usbDevSetFeature</a> from usbdevprotocol.o(.text) referenced from usbdevprotocol.o(.data)
 <LI><a href="#[11]">__usbDevSetInterface</a> from usbdevprotocol.o(.text) referenced from usbdevprotocol.o(.data)
 <LI><a href="#[6]">defaultVectorHandle</a> from target.o(.text) referenced 47 times from vector_table.o(.constdata)
 <LI><a href="#[7]">usbDevException</a> from usbdevdriver.o(.text) referenced from vector_table.o(.constdata)
 <LI><a href="#[7]">usbDevException</a> from usbdevdriver.o(.text) referenced from main.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[12]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[14]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[16]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[72]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[73]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[17]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[74]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[18]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[1a]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[75]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[76]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[77]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[78]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[79]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[7a]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[7b]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[7c]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[7d]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[7e]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[7f]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[80]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[81]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[82]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[83]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[84]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[85]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[86]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[87]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[23]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[88]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[89]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[8a]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[8b]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[8c]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[8d]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[15]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[8e]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[1c]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[1e]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_li &rArr; __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[8f]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[1f]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; usbDeviceDemo &rArr; usbDevServe &rArr; __usbDevControlHandler &rArr; __usbDevStallEp0 &rArr; __usbDevSetEndpointStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[90]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[6e]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[22]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[91]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[24]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[2a]"></a>zyIrqDisable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, zy_if.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetConfiguration
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetFeature
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevClearFeature
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevCodeTransmit
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevPinInit
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbPllConfig
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrEnable
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrDisable
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrClr
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapFree
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapMalloc
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevServe
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;targetInit
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDeviceDemo
</UL>

<P><STRONG><a name="[2c]"></a>zyIrqEnable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, zy_if.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetConfiguration
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetFeature
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevClearFeature
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevCodeTransmit
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevPinInit
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbPllConfig
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrEnable
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrDisable
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrClr
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapFree
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapMalloc
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevServe
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;targetInit
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDeviceDemo
</UL>

<P><STRONG><a name="[92]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.emb_text), UNUSED)

<P><STRONG><a name="[26]"></a>usbDeviceDemo</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = usbDeviceDemo &rArr; usbDevServe &rArr; __usbDevControlHandler &rArr; __usbDevStallEp0 &rArr; __usbDevSetEndpointStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevWriteEndpoint
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevServe
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevInit
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20]"></a>main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = main &rArr; usbDeviceDemo &rArr; usbDevServe &rArr; __usbDevControlHandler &rArr; __usbDevStallEp0 &rArr; __usbDevSetEndpointStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;targetInit
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDeviceDemo
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[6]"></a>defaultVectorHandle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, target.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> vector_table.o(.constdata)
</UL>
<P><STRONG><a name="[2d]"></a>targetInit</STRONG> (Thumb, 346 bytes, Stack size 8 bytes, target.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = targetInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIfInit
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e]"></a>zyIfInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, zy_if.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;targetInit
</UL>

<P><STRONG><a name="[93]"></a>zyReset</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, zy_if.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>zyHeapMalloc</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>

<P><STRONG><a name="[31]"></a>zyHeapFree</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>

<P><STRONG><a name="[27]"></a>zyIsrSet</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, zy_if.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = zyIsrSet
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDeviceDemo
</UL>

<P><STRONG><a name="[33]"></a>zyIsrClr</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>

<P><STRONG><a name="[34]"></a>zyIsrDisable</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>

<P><STRONG><a name="[35]"></a>zyIsrEnable</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>

<P><STRONG><a name="[25]"></a>_sys_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_sys_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[70]"></a>_ttywrch</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rt_sys_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[94]"></a>_sys_open</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>_sys_close</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>_sys_read</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>_sys_write</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>_sys_ensure</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[99]"></a>_sys_flen</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>_sys_seek</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>_sys_istty</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[9c]"></a>_sys_tmpnam</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[9d]"></a>_sys_command_string</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>clock</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>time</STRONG> (Thumb, 24 bytes, Stack size 56 bytes, rt_sys_c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>

<P><STRONG><a name="[9f]"></a>remove</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[a0]"></a>rename</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>system</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>__usbDevConfigMaxPaketSize</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, usbdevci.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevConfigEndpoint
</UL>

<P><STRONG><a name="[3a]"></a>__usbDevGetData</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usbdevci.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevClearBuffer
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSelectClrIntEndpoint
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSelectEndpoint
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevGetDevStatus
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevReadTestRegister
</UL>

<P><STRONG><a name="[39]"></a>__usbDevSendCmd</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, usbdevci.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevValidBuffer
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevClearBuffer
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetEndpointStatus
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSelectClrIntEndpoint
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSelectEndpoint
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevGetDevStatus
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetDevStatus
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetMode
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetEndpointEnable
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetAddressEnable
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevReadTestRegister
</UL>

<P><STRONG><a name="[38]"></a>__usbDevReadTestRegister</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, usbdevci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __usbDevReadTestRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSendCmd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevGetData
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevInit
</UL>

<P><STRONG><a name="[3b]"></a>__usbDevSetAddressEnable</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, usbdevci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __usbDevSetAddressEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetAddress
</UL>

<P><STRONG><a name="[3c]"></a>__usbDevSetEndpointEnable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, usbdevci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __usbDevSetEndpointEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevInitConfig
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevInitUnconfig
</UL>

<P><STRONG><a name="[3d]"></a>__usbDevSetMode</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, usbdevci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __usbDevSetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevInit
</UL>

<P><STRONG><a name="[3e]"></a>__usbDevSetDevStatus</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, usbdevci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __usbDevSetDevStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSoftConnect
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSoftDisconnect
</UL>

<P><STRONG><a name="[3f]"></a>__usbDevGetDevStatus</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, usbdevci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __usbDevGetDevStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSendCmd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevGetData
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevException
</UL>

<P><STRONG><a name="[40]"></a>__usbDevSelectEndpoint</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, usbdevci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __usbDevSelectEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSendCmd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevGetData
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevGetStatus
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevReadEndpoint
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevWriteEndpoint
</UL>

<P><STRONG><a name="[41]"></a>__usbDevSelectClrIntEndpoint</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, usbdevci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __usbDevSelectClrIntEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSendCmd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevGetData
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEp0TxDone
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEp0RxDone
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEp2RxDone
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEp2TxDone
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEp1RxDone
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEp1TxDone
</UL>

<P><STRONG><a name="[42]"></a>__usbDevSetEndpointStatus</STRONG> (Thumb, 28 bytes, Stack size 20 bytes, usbdevci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __usbDevSetEndpointStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetFeature
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevClearFeature
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevStallEp0
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEp0RxDone
</UL>

<P><STRONG><a name="[43]"></a>__usbDevClearBuffer</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, usbdevci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __usbDevClearBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSendCmd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevGetData
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevReadEndpoint
</UL>

<P><STRONG><a name="[44]"></a>__usbDevValidBuffer</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, usbdevci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __usbDevValidBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevWriteEndpoint
</UL>

<P><STRONG><a name="[45]"></a>__usbDevSoftDisconnect</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, usbdevci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __usbDevSoftDisconnect &rArr; __usbDevSetDevStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetDevStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSoftReconnect
</UL>

<P><STRONG><a name="[46]"></a>__usbDevSoftConnect</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, usbdevci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __usbDevSoftConnect &rArr; __usbDevSetDevStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetDevStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSoftReconnect
</UL>

<P><STRONG><a name="[47]"></a>__usbDevSoftReconnect</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usbdevci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __usbDevSoftReconnect &rArr; __usbDevSoftConnect &rArr; __usbDevSetDevStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSoftConnect
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSoftDisconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevInit
</UL>

<P><STRONG><a name="[48]"></a>usbDevReadEndpoint</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, usbdevci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = usbDevReadEndpoint &rArr; __usbDevSelectEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevClearBuffer
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSelectEndpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEp0RxDone
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEp2RxDone
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEp1RxDone
</UL>

<P><STRONG><a name="[2b]"></a>usbDevWriteEndpoint</STRONG> (Thumb, 204 bytes, Stack size 28 bytes, usbdevci.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = usbDevWriteEndpoint &rArr; __usbDevSelectEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevValidBuffer
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSelectEndpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevCodeTransmit
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSingleTransmit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEp0TxDone
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDeviceDemo
</UL>

<P><STRONG><a name="[49]"></a>__usbDevConfigEndpoint</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, usbdevdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __usbDevConfigEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevConfigMaxPaketSize
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevBusReset
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevInit
</UL>

<P><STRONG><a name="[4b]"></a>__usbDevEp1TxDone</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, usbdevdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __usbDevEp1TxDone &rArr; __usbDevSelectClrIntEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSelectClrIntEndpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEpIntHandler
</UL>

<P><STRONG><a name="[4c]"></a>__usbDevEp1RxDone</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, usbdevdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = __usbDevEp1RxDone &rArr; usbDevReadEndpoint &rArr; __usbDevSelectEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevReadEndpoint
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSelectClrIntEndpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEpIntHandler
</UL>

<P><STRONG><a name="[4d]"></a>__usbDevEp2TxDone</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, usbdevdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __usbDevEp2TxDone &rArr; __usbDevSelectClrIntEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSelectClrIntEndpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEpIntHandler
</UL>

<P><STRONG><a name="[4e]"></a>__usbDevEp2RxDone</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, usbdevdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = __usbDevEp2RxDone &rArr; usbDevReadEndpoint &rArr; __usbDevSelectEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevReadEndpoint
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSelectClrIntEndpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEpIntHandler
</UL>

<P><STRONG><a name="[4f]"></a>__usbDevEpIntHandler</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, usbdevdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = __usbDevEpIntHandler &rArr; __usbDevEp0RxDone &rArr; usbDevReadEndpoint &rArr; __usbDevSelectEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEp0TxDone
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEp0RxDone
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEp2RxDone
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEp2TxDone
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEp1RxDone
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEp1TxDone
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevException
</UL>

<P><STRONG><a name="[52]"></a>__usbDevBusReset</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usbdevdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __usbDevBusReset &rArr; __usbDevConfigEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevIntConfig
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevConfigEndpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevException
</UL>

<P><STRONG><a name="[57]"></a>__usbDevSuspendChange</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbdevdriver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevServe
</UL>

<P><STRONG><a name="[58]"></a>__usbDevConnectChange</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbdevdriver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevServe
</UL>

<P><STRONG><a name="[28]"></a>usbDevInit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, usbdevdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = usbDevInit &rArr; __usbDevSoftReconnect &rArr; __usbDevSoftConnect &rArr; __usbDevSetDevStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevIntConfig
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevHardwareInit
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevHadwareReconnect
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevConfigEndpoint
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSoftReconnect
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetMode
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevReadTestRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDeviceDemo
</UL>

<P><STRONG><a name="[29]"></a>usbDevServe</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, usbdevdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = usbDevServe &rArr; __usbDevControlHandler &rArr; __usbDevStallEp0 &rArr; __usbDevSetEndpointStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevControlHandler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevConnectChange
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSuspendChange
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDeviceDemo
</UL>

<P><STRONG><a name="[7]"></a>usbDevException</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, usbdevdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = usbDevException &rArr; __usbDevEpIntHandler &rArr; __usbDevEp0RxDone &rArr; usbDevReadEndpoint &rArr; __usbDevSelectEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevBusReset
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEpIntHandler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevGetDevStatus
</UL>
<BR>[Address Reference Count : 2]<UL><LI> vector_table.o(.constdata)
<LI> main.o(.text)
</UL>
<P><STRONG><a name="[a2]"></a>usbDevGetVer</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbdevdriver.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>__usbDevHardwareInit</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, usbdevhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __usbDevHardwareInit &rArr; __usbDevPinInit
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevPinInit
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbPllConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevInit
</UL>

<P><STRONG><a name="[5b]"></a>__usbDevHadwareDisconnect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbdevhal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevHadwareReconnect
</UL>

<P><STRONG><a name="[5c]"></a>__usbDevHadwareConnect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbdevhal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevHadwareReconnect
</UL>

<P><STRONG><a name="[55]"></a>__usbDevHadwareReconnect</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, usbdevhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __usbDevHadwareReconnect
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevHadwareConnect
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevHadwareDisconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevInit
</UL>

<P><STRONG><a name="[53]"></a>__usbDevIntConfig</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, usbdevhal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevBusReset
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevInit
</UL>

<P><STRONG><a name="[5d]"></a>__usbDevStallEp0</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, usbdevprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __usbDevStallEp0 &rArr; __usbDevSetEndpointStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetEndpointStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetInterface
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetConfiguration
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevGetDescriptor
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetFeature
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevClearFeature
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevGetStatus
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevReserved
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevControlHandler
</UL>

<P><STRONG><a name="[a]"></a>__usbDevReserved</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, usbdevprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __usbDevReserved &rArr; __usbDevStallEp0 &rArr; __usbDevSetEndpointStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevStallEp0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdevprotocol.o(.data)
</UL>
<P><STRONG><a name="[5e]"></a>__usbDevInitUnconfig</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, usbdevprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __usbDevInitUnconfig &rArr; __usbDevSetEndpointEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetEndpointEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetConfiguration
</UL>

<P><STRONG><a name="[5f]"></a>__usbDevInitConfig</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, usbdevprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __usbDevInitConfig &rArr; __usbDevSetEndpointEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetEndpointEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetConfiguration
</UL>

<P><STRONG><a name="[60]"></a>__usbDevSingleTransmit</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, usbdevprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __usbDevSingleTransmit &rArr; usbDevWriteEndpoint &rArr; __usbDevSelectEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevWriteEndpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetInterface
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevGetInterface
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetConfiguration
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevGetConfiguration
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetAddress
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetFeature
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevClearFeature
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevGetStatus
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEp0TxDone
</UL>

<P><STRONG><a name="[61]"></a>__usbDevCodeTransmit</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, usbdevprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __usbDevCodeTransmit &rArr; usbDevWriteEndpoint &rArr; __usbDevSelectEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevWriteEndpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevGetDescriptor
</UL>

<P><STRONG><a name="[8]"></a>__usbDevGetStatus</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, usbdevprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __usbDevGetStatus &rArr; __usbDevSingleTransmit &rArr; usbDevWriteEndpoint &rArr; __usbDevSelectEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSingleTransmit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevStallEp0
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSelectEndpoint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdevprotocol.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>__usbDevClearFeature</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, usbdevprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __usbDevClearFeature &rArr; __usbDevSingleTransmit &rArr; usbDevWriteEndpoint &rArr; __usbDevSelectEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSingleTransmit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevStallEp0
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetEndpointStatus
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdevprotocol.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>__usbDevSetFeature</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, usbdevprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __usbDevSetFeature &rArr; __usbDevSingleTransmit &rArr; usbDevWriteEndpoint &rArr; __usbDevSelectEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSingleTransmit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevStallEp0
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetEndpointStatus
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdevprotocol.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>__usbDevSetAddress</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usbdevprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __usbDevSetAddress &rArr; __usbDevSingleTransmit &rArr; usbDevWriteEndpoint &rArr; __usbDevSelectEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSingleTransmit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetAddressEnable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdevprotocol.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>__usbDevGetDescriptor</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, usbdevprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __usbDevGetDescriptor &rArr; __usbDevCodeTransmit &rArr; usbDevWriteEndpoint &rArr; __usbDevSelectEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevCodeTransmit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevStallEp0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdevprotocol.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>__usbDevGetConfiguration</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usbdevprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __usbDevGetConfiguration &rArr; __usbDevSingleTransmit &rArr; usbDevWriteEndpoint &rArr; __usbDevSelectEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSingleTransmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdevprotocol.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>__usbDevSetConfiguration</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, usbdevprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __usbDevSetConfiguration &rArr; __usbDevSingleTransmit &rArr; usbDevWriteEndpoint &rArr; __usbDevSelectEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSingleTransmit
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevInitConfig
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevInitUnconfig
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevStallEp0
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdevprotocol.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>__usbDevGetInterface</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, usbdevprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __usbDevGetInterface &rArr; __usbDevSingleTransmit &rArr; usbDevWriteEndpoint &rArr; __usbDevSelectEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSingleTransmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdevprotocol.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>__usbDevSetInterface</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usbdevprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __usbDevSetInterface &rArr; __usbDevSingleTransmit &rArr; usbDevWriteEndpoint &rArr; __usbDevSelectEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSingleTransmit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevStallEp0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdevprotocol.o(.data)
</UL>
<P><STRONG><a name="[50]"></a>__usbDevEp0RxDone</STRONG> (Thumb, 376 bytes, Stack size 24 bytes, usbdevprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = __usbDevEp0RxDone &rArr; usbDevReadEndpoint &rArr; __usbDevSelectEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevReadEndpoint
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSetEndpointStatus
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSelectClrIntEndpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEpIntHandler
</UL>

<P><STRONG><a name="[51]"></a>__usbDevEp0TxDone</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, usbdevprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __usbDevEp0TxDone &rArr; __usbDevSingleTransmit &rArr; usbDevWriteEndpoint &rArr; __usbDevSelectEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSingleTransmit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevSelectClrIntEndpoint
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevWriteEndpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevEpIntHandler
</UL>

<P><STRONG><a name="[56]"></a>__usbDevControlHandler</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, usbdevprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = __usbDevControlHandler &rArr; __usbDevStallEp0 &rArr; __usbDevSetEndpointStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevStallEp0
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbDevServe
</UL>

<P><STRONG><a name="[a3]"></a>__semihosting$guard</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[a4]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapMalloc
</UL>

<P><STRONG><a name="[32]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapFree
</UL>

<P><STRONG><a name="[37]"></a>mktime</STRONG> (Thumb, 354 bytes, Stack size 56 bytes, mktime.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tm_carry
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time
</UL>

<P><STRONG><a name="[62]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[a5]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[3]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[1]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_expand
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[67]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[1b]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_expand
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_escrow
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[6a]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[0]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a8]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[68]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[69]"></a>__rt_heap_escrow</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, heapauxa.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[65]"></a>__rt_heap_expand</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, heapauxa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __rt_heap_expand
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[1d]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[21]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[6c]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[6b]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[6f]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[71]"></a>__rt_fp_status_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_fp_status_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[13]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_sys_s.o(rt_sys))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[19]"></a>_fp_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[a9]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[59]"></a>__usbPllConfig</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, usbdevhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __usbPllConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevHardwareInit
</UL>

<P><STRONG><a name="[5a]"></a>__usbDevPinInit</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, usbdevhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __usbDevPinInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__usbDevHardwareInit
</UL>

<P><STRONG><a name="[64]"></a>_tm_carry</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, mktime.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
